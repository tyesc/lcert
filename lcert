#!/bin/bash

### Based on the work of Thomas Leister <thomas@metalhead.club>
### Original script https://github.com/ThomasLeister/root-certificate-deployment

IFS="."

usage() {
  echo "" 1>&2;
  echo -e "\e[1mNAME\e[0m" 1>&2;
  echo "" 1>&2;
  echo -e "\tlcert - load certificate" 1>&2;
  echo "" 1>&2;
  echo -e "\e[1mSYNOSIS\e[0m" 1>&2;
  echo "" 1>&2;
  echo -e "\tlcert [OPTIONS]... " 1>&2;
  echo "" 1>&2;
  echo -e "\e[1mDESCRIPTION\e[0m" 1>&2;
  echo -e "\tAutomatic cp and Load new cert.pem to certificate trust store of applications using NSS" 1>&2;
  echo "" 1>&2;
  echo -e "\t\e[1m-n\e[0m\tset name, with extention, of cert in /etc/ssl/certs/ , \e[1m-n exemple.cert.pem\e[0m" 1>&2;
  echo "" 1>&2;
  echo -e "\t\e[1m-p (OPTIONAL)\e[0m\tset the path of the certificate to copy into /etc/ssl/certs/ , \e[1m-p ./cert.pem\e[0m" 1>&2;
  echo "" 1>&2;
  echo -e "\e[1mEXEMPLE\e[0m" 1>&2;
  echo -e "\tlcert -n my-cert.pem" 1>&2;
  echo -e "\t> Do you want to load certificate in trust store of applications [y/n]? y" 1>&2;
  echo -e "\t> This process can take a long moment, please don't abort the task" 1>&2;
  echo -e "\t> Loaded !" 1>&2;
  echo "" 1>&2;
  echo -e "\tlcert -n my-cert.pem -p ./cert.pem" 1>&2;
  echo -e "\t> Do you want to copy ./cert.pem into /etc/ssl/certs/my-cert.pem [y/n]? y" 1>&2;
  echo -e "\t> ./cert.pem copied into /etc/ssl/certs/my-cert.pem" 1>&2;
  echo -e "\t> This process can take a long moment, please don't abort the task" 1>&2;
  echo -e "\t> Loaded !" 1>&2;

  exit 1;
}

load_in_trust_store() {
  sudo update-ca-certificates

  echo "This process can take a long moment, please don't abort the task"

  ###
  ### For cert8 (legacy - DBM)
  ###

  for certDB in $(find ~/ -name "cert8.db")
  do
      echo "cert8";
      cert_dir=$(dirname ${certDB});
      certutil -A -n "${cert_name}" -t "TCu,Cu,Tu" -i ${cert_file} -d dbm:${cert_dir}
  done

  ###
  ### For cert9 (SQL)
  ###

  for certDB in $(find ~/ -name "cert9.db")
  do
      echo "cert9";
      cert_dir=$(dirname ${certDB});
      certutil -A -n "${cert_name}" -t "TCu,Cu,Tu" -i ${cert_file} -d sql:${cert_dir}
  done
  echo "Loaded !"
}

while getopts "p:n:" arg; do
  case $arg in
    p)
      cert_path=${OPTARG}
      ;;
    n)
      cert_name=${OPTARG}
      ;;
    *)
      usage
      ;;
  esac
done

if [[ $UID != 0 ]]; then
    echo "Please run this script with sudo:"
    echo "sudo $0 $*"
    echo "" 1>&2

    exit 1
fi

if [ -z "${cert_path+x}" ]; then
  if [ -z "${cert_name}" ]; then
    usage
  else
    read -p "Do you want to load certificate in trust store of applications [y/n]?" -n 1 -r
    echo "" 1>&2;

    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      [[ "$0" = "${BASH_SOURCE}" ]] && exit 1 || return 1
    fi

    cert_file="/etc/ssl/certs/${cert_name}"

    read -ra ADDR <<< "${cert_name}"
    cert_name="${ADDR[0]} CA"

    load_in_trust_store

    exit 1 || return 1
  fi
else
  if [ -z "${cert_name}" ]; then
    usage
  else
    read -p "Do you want to copy ${cert_path} into /etc/ssl/certs/${cert_name} [y/n]?" -n 1 -r
    echo "" 1>&2;

    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      [[ "$0" = "${BASH_SOURCE}" ]] && exit 1 || return 1
    fi

    sudo cp ${cert_path} /etc/ssl/certs/
    echo "${cert_path} copied into /etc/ssl/certs/${cert_name}"

    cert_file="/etc/ssl/certs/${cert_name}"

    read -ra ADDR <<< "${cert_name}"
    cert_name="${ADDR[0]} CA"

    load_in_trust_store

    exit 1 || return 1
  fi
fi
